[{"E:\\react\\my-app\\my-app1\\src\\index.js":"1","E:\\react\\my-app\\my-app1\\src\\reportWebVitals.js":"2","E:\\react\\my-app\\my-app1\\src\\App.js":"3","E:\\react\\my-app\\my-app1\\src\\components\\auth.jsx":"4","E:\\react\\my-app\\my-app1\\src\\components\\navbar.jsx":"5","E:\\react\\my-app\\my-app1\\src\\components\\profile.jsx":"6","E:\\react\\my-app\\my-app1\\src\\components\\reusables\\formInputs.jsx":"7","E:\\react\\my-app\\my-app1\\src\\components\\reusables\\formButtons.jsx":"8","E:\\react\\my-app\\my-app1\\src\\services\\myrequests.jsx":"9","E:\\react\\my-app\\my-app1\\src\\services\\api.jsx":"10","E:\\react\\my-app\\my-app1\\src\\components\\tasks\\addtask.jsx":"11","E:\\react\\my-app\\my-app1\\src\\components\\reusables\\formTextArea.jsx":"12","E:\\react\\my-app\\my-app1\\src\\components\\tasks\\allTask.jsx":"13","E:\\react\\my-app\\my-app1\\src\\components\\VerifyeAccount.jsx":"14"},{"size":537,"mtime":1608381172260,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":3538,"mtime":1608381499383,"results":"18","hashOfConfig":"16"},{"size":4415,"mtime":1608267769167,"results":"19","hashOfConfig":"16"},{"size":1396,"mtime":1608209267053,"results":"20","hashOfConfig":"16"},{"size":970,"mtime":1608382372047,"results":"21","hashOfConfig":"16"},{"size":1021,"mtime":1608203739358,"results":"22","hashOfConfig":"16"},{"size":208,"mtime":1608016199186,"results":"23","hashOfConfig":"16"},{"size":2196,"mtime":1608381864354,"results":"24","hashOfConfig":"16"},{"size":170,"mtime":1608266496290,"results":"25","hashOfConfig":"16"},{"size":2156,"mtime":1608276439028,"results":"26","hashOfConfig":"16"},{"size":933,"mtime":1608270201435,"results":"27","hashOfConfig":"16"},{"size":3233,"mtime":1608278032626,"results":"28","hashOfConfig":"16"},{"size":893,"mtime":1608382056467,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1154z9m",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react\\my-app\\my-app1\\src\\index.js",[],"E:\\react\\my-app\\my-app1\\src\\reportWebVitals.js",[],["62","63"],"E:\\react\\my-app\\my-app1\\src\\App.js",[],"E:\\react\\my-app\\my-app1\\src\\components\\auth.jsx",["64","65"],"import React, { useCallback, Component, useState } from \"react\";\r\nimport FormInput from \"./reusables/formInputs\";\r\nimport FormButton from \"./reusables/formButtons\";\r\n\r\nconst Auth = (props) => {\r\n  const initState = {\r\n    isRegister: false,\r\n  };\r\n  const [regData, setRegdata] = useState(initState);\r\n  const [user, setUserInput] = useState({});\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    \r\n    setUserInput({ ...user, [name]: value });\r\n\r\n    // const { user } = this.state;\r\n    // user[name] = value;\r\n    // this.setState({ user });\r\n  };\r\n\r\n  const onChangeRegister = () => {\r\n    setRegdata({ isRegister: true });\r\n    // this.setState({ isRegister: true });\r\n  };\r\n\r\n  const onChangeLogin = () => {\r\n    setRegdata({ isRegister: false });\r\n\r\n    // this.setState({ isRegister: false });\r\n  };\r\n\r\n  const handleLoginClick = useCallback(() => {\r\n    props.LoginHandle(user) \r\n  }, [user,]);\r\n\r\n  const handleSignupClick = useCallback(() => {\r\n    props.handleSignup(user) \r\n  }, [user,]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"col-md-4 ml-auto mr-auto \">\r\n        <div\r\n          className=\"contaier-fluid ml-auto mr-auto px-5 py-5 mt-5\"\r\n          style={{ background: \"whitesmoke\" }}\r\n        >\r\n          {!regData.isRegister ? (\r\n            <div>\r\n              <div className=\"text-center\">\r\n                <h2>Login</h2>\r\n              </div>\r\n              <div className=\"row ml-auto mr-auto\">\r\n                <div className=\"ml-auto mr-auto\">\r\n                  <FormInput\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                    placeholder=\"username\"\r\n                  />\r\n                  <FormInput\r\n                    label=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onChange={handleChange}\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  <FormButton\r\n                    type=\"submit\"\r\n                    label=\"Login\"\r\n                    className=\"btn btn-primary mt-2 btn-block\"\r\n                    handleClick={handleLoginClick}\r\n                  />\r\n                  <FormButton\r\n                    label=\"Register\"\r\n                    className=\"btn btn-warning mt-2 btn-block\"\r\n                    handleClick={onChangeRegister}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div className=\"text-center\">\r\n                <h2>Register</h2>\r\n              </div>\r\n              <div className=\"row ml-auto mr-auto\">\r\n                <div className=\"ml-auto mr-auto\">\r\n                  <FormInput\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                    placeholder=\"username\"\r\n                  />\r\n\r\n                  <FormInput\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    onChange={handleChange}\r\n                    placeholder=\"Email Address\"\r\n                  />\r\n                  <FormInput\r\n                    label=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onChange={handleChange}\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  <FormInput\r\n                    label=\"Confirm Password\"\r\n                    name=\"confirm_password\"\r\n                    type=\"password\"\r\n                    onChange={handleChange}\r\n                    placeholder=\"Confirm Password\"\r\n                  />\r\n                  <FormButton\r\n                    type=\"submit\"\r\n                    label=\"Register\"\r\n                    className=\"btn btn-primary mt-2 btn-block\"\r\n                    handleClick={handleSignupClick}\r\n                  />\r\n\r\n                  <FormButton\r\n                    label=\"Login\"\r\n                    className=\"btn btn-warning mt-2 btn-block\"\r\n                    handleClick={onChangeLogin}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","E:\\react\\my-app\\my-app1\\src\\components\\navbar.jsx",["66"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link to=\"/\" className=\"navbar-brand\">\r\n        My App\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavDropdown\"\r\n        aria-controls=\"navbarNavDropdown\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item active\">\r\n            <Link to=\"task\" className=\"nav-link\">\r\n              Tasks\r\n            </Link>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n      <Link to=\"auth\"  className=\"nav-link\">Edit</Link>\r\n      </li> */}\r\n          <li className=\"nav-item\">\r\n            {props.logged_in ? (\r\n              <a onClick={props.logout}  href=\"\" className=\"nav-link\">\r\n                Logout\r\n              </a>\r\n            ) : (\r\n              <Link to=\"auth\" className=\"nav-link\">\r\n                Login\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","E:\\react\\my-app\\my-app1\\src\\components\\profile.jsx",[],"E:\\react\\my-app\\my-app1\\src\\components\\reusables\\formInputs.jsx",["67"],"import PropTypes from 'prop-types'\r\n\r\nconst FormInput = ({\r\n  name,\r\n  type,\r\n  placeholder,\r\n  onChange,\r\n  className,\r\n  value,\r\n  error,\r\n  children,\r\n  label,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        id={name}\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        value={value}\r\n        className={className}\r\n        style={error && { border: \"solid 1px red\" }}\r\n      />\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nFormInput.defaultProps = {\r\n  type: \"text\",\r\n  className: \"form-control\",\r\n};\r\n\r\nFormInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.oneOf([\"text\", \"number\", \"password\", \"email\", \"date\", \"submit\"]),\r\n  className: PropTypes.string,\r\n  value: PropTypes.any,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FormInput;\r\n","E:\\react\\my-app\\my-app1\\src\\components\\reusables\\formButtons.jsx",[],"E:\\react\\my-app\\my-app1\\src\\services\\myrequests.jsx",["68"],"E:\\react\\my-app\\my-app1\\src\\services\\api.jsx",[],"E:\\react\\my-app\\my-app1\\src\\components\\tasks\\addtask.jsx",[],"E:\\react\\my-app\\my-app1\\src\\components\\reusables\\formTextArea.jsx",[],"E:\\react\\my-app\\my-app1\\src\\components\\tasks\\allTask.jsx",[],"E:\\react\\my-app\\my-app1\\src\\components\\VerifyeAccount.jsx",["69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":35,"column":6,"nodeType":"76","endLine":35,"endColumn":13,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"75","line":39,"column":6,"nodeType":"76","endLine":39,"endColumn":13,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":33,"column":15,"nodeType":"81","endLine":33,"endColumn":71},{"ruleId":"82","severity":1,"message":"83","line":42,"column":3,"nodeType":"84","messageId":"85","endLine":42,"endColumn":7},{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"74","severity":1,"message":"90","line":23,"column":6,"nodeType":"76","endLine":23,"endColumn":8,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["94"],["95"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props.match.params.token'. Either include it or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [props, user]",{"range":"102","text":"103"},{"range":"104","text":"103"},"Update the dependencies array to be: [props.match.params.token]",{"range":"105","text":"106"},[920,927],"[props, user]",[1018,1025],[643,645],"[props.match.params.token]"]